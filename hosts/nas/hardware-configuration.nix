# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ../../modules/hardware/tmpfsroot.nix
  ];

  config.tmpfsroot = {
    enable = true;
    boot = {
      device = "/dev/disk/by-uuid/6028-CED0";
      fsType = "vfat";
    };
    nixstore = {
      device = "/dev/disk/by-uuid/c9f746d0-b1b5-4f52-bc27-869d4a2601ce";
      fsType = "f2fs";
      options = ["discard"];
    };
    home = {
      device = "/dev/disk/by-uuid/24b73bb4-2da4-4669-b5e2-f4bc31017e13";
      fsType = "f2fs";
      options = ["discard"];
    };
  };
  config = {
    boot.initrd.availableKernelModules = ["xhci_pci" "ehci_pci" "ahci" "usb_storage" "sd_mod"];
    boot.initrd.kernelModules = [];
    boot.kernelModules = ["kvm-intel"];
    boot.extraModulePackages = [];
    boot.supportedFilesystems = ["zfs"];

    #import zfs pool on boot
    boot.zfs.extraPools = ["Pool1_20TB"];
    boot.zfs.forceImportRoot = false;

    swapDevices = [];

    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    networking.useDHCP = lib.mkDefault true;
    # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  };
}
