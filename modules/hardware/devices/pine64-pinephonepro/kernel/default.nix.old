{pkgs, ...}: {
  boot.kernelPackages = let
    linux_ppp_pkg = {
      fetchFromGitLab,
      buildLinux,
      ...
    } @ args:
      buildLinux (args
        // rec {
          version = "ppp-6.8-20240420-2024";
          modDirVersion = version;

          configfile = ./config.aarch64;

          src = fetchFromGitLab {
            owner = "pine64-org";
            repo = "linux";
            rev = version;
            sha256 = "";
          };

          kernelPatches = [
            ./0001-arm64-dts-rockchip-set-type-c-dr_mode-as-otg.patch
            ./0001-dts-pinephone-pro-Setup-default-on-and-panic-LEDs.patch
            ./0001-usb-dwc3-Enable-userspace-role-switch-control.patch
          ];

          extraConfig = ''
            # eMMC
            MMC_SDHCI_OF_ARASAN = yes;

            # Display
            DRM_PANEL_HIMAX_HX8394 = yes;

            # Touch screen
            TOUCHSCREEN_GOODIX = yes;

            # General wireless
            WIRELESS = yes;

            # Bluetooth
            BT = yes;
            BT_HCIUART = yes;
            BT_HCIUART_BCM = yes;

            # Wifi
            WLAN = yes;
            WLAN_VENDOR_BROADCOM = yes;
            BRCMUTIL = yes;
            BRCMFMAC = yes;
            BRCMFMAC_SDIO = yes;
            BRCMSMAC = yes;
            BRCM_TRACING = yes;
            BRCMDBG = yes;
            MAC80211 = yes;

            # Sensors
            STK3310 = yes; # Light sensor

            # SPI Flash
            SPI = yes;
            SPI_ROCKCHIP = yes;
            MTD = yes;
            MTD_SPI_NOR = yes;

            # Keyboard
            IP5XXX_POWER = yes;
            KEYBOARD_PINEPHONE = yes;

            # Vibrate motor
            INPUT_GPIO_VIBRA = yes;          '';
        }
        // (args.argsOverride or {}));
    linux_ppp = pkgs.callPackage linux_ppp_pkg {};
  in
    pkgs.recurseIntoAttrs (pkgs.linuxPackagesFor linux_ppp);
}
